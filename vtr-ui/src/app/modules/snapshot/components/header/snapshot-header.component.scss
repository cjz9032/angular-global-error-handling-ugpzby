@import "../../../../app.theme.scss";

.vtr-snapshot-header {
	border-radius: 0.5rem;
	height: 100%;
	width: 100%;
	background: linear-gradient($gradient_angle, $main_darkest 0%, $main_darker 100%);
	box-shadow: 0 0 1.5rem 0 rgba(0, 0, 0, 0.15);

	@include high-contrast-border;

}

.title {
	color: $light;
	font-size: $fontsize_xl;
	font-weight: $weight_600;
	padding: 2.4rem 2.4rem 0.5rem;
}

.button-row {
	padding: 2.4rem;
	display: flex;
	align-items: center;

	::ng-deep .vtr-ui-button {
		.button-box {
			padding-left: 0;
		}
	}

	.hyperlink-container {
		margin: 0 0 0 1.9rem;
	}
}

.snapshot-information {
	color: $grey_light;
	font-size: $fontsize_xs;
	font-weight: $weight_light;
	padding-left: 2.4rem;
	line-height: 1.5rem;
	display: flex;
	flex-wrap: nowrap;
	justify-content: flex-start;
	align-items: center;

	.snapshot-information-text {
		margin-bottom: 0;
		padding-left: 0;
	}

	.question-mark-container {
		margin-left: 2rem;
		margin-right: 2rem;
		padding-left: 0rem;
	}

	::ng-deep ngb-tooltip-window.vtr-tooltip.tooltip {
		&.bs-tooltip-auto[x-placement^='left-top'],
		&.tooltip.bs-tooltip-left-top {
			margin-top: -6rem;
			.arrow {
				&::before {
					top: calc(5rem + 50%);
				}

				// Used to fix arrow top when is in high contrast
				@media #{$white-on-black} {
					top: calc(0% + 6.5rem);
				}
				@media #{$black-on-white} {
					top: calc(0% + 6.5rem);
				}
			}
		}

		&.bs-tooltip-auto[x-placement^='right-top'],
		&.tooltip.bs-tooltip-right-top {
			margin-top: -6rem;
			.arrow {
				&::before {
					top: calc(5rem + 50%);
				}

				// Used to fix arrow top when is in high contrast
				@media #{$white-on-black} {
					top: calc(0% + 6.3rem);
				}
				@media #{$black-on-white} {
					top: calc(0% + 6.3rem);
				}
			}
		}
	}
}

@mixin dots($color) {
	animation: dots 2s steps(5, end) infinite;

	@keyframes dots {
		0%,
		20% {
			color: rgba(0, 0, 0, 0);
			text-shadow: 0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0);
		}
		40% {
			color: $color;
			text-shadow: 0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0);
		}
		60% {
			text-shadow: 0.25em 0 0 $color, 0.5em 0 0 rgba(0, 0, 0, 0);
		}
		80%,
		100% {
			text-shadow: 0.25em 0 0 $color, 0.5em 0 0 $color;
		}
	}
}

.animated-dots:after {
	content: '. ';

	// Used when high contrast is not active or is white-on-black
	@include dots($light);

	@media #{$black-on-white} {
		@include dots($dark);
	}
}
